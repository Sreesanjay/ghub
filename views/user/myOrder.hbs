<style>
    @media only screen and (max-width: 900px) {
        .progress {
            display: none;
        }
    }

    .my-order {
        position: relative;
    }

    .review-rate {
        max-width: 800px;
        width: 100%;
        display: none;
        position: fixed;
        top: 150px;
    }
</style>
<div class="my-order p-3">
    <h3 class="mb-3">My Orders</h3>
    <div class="my-order-wraper">
        {{#each orders}}
        <div class="card mt-3 p-3 c-pointer">

            <div class="img-container row">
                <img src="/Images/Products/{{this.prod_details.primary_img.filename}}" alt="" class="col-12 col-md-2"
                    style="height: 100px;width:auto;">
                <div class="prod-details col-12 col-md-5 mt-3 mt-md-0">
                    <h5 class="prod-name">{{this.prod_details.product_name}}{{this.prod_details.prod_highlight}}</h5>
                    <h6 class="">{{this.prod_details.brand_name}}</h6>
                </div>
                <div class="price col-12 col-md-2">
                    <h5 id="price">â‚¹{{subtract this.products.price this.products.discount}}</h5>
                </div>
                <div class="status-details col-12 col-md-3">
                    {{#isEqual this.products.status "Payment pending"}}
                    <p class="text-secondary text-danger">Payment Pending</p>
                    {{/isEqual}}
                    {{#isEqual this.products.status "Confirmed"}}
                    <p class=""> Confirmed on {{toDate this.products.confirmed_date}}</p>
                    {{/isEqual}}

                    {{#isEqual this.products.status "Shipped"}}
                    <p class=""> Shipped on {{toDate this.products.shipped_date}}</p>
                    {{/isEqual}}

                    {{#isEqual this.products.status "Out for delivery"}}
                    <p class=""> Out for delivery</p>
                    {{/isEqual}}

                    {{#isEqual this.products.status "Delivered"}}
                    <p class="text-success"> Delivered on {{toDate this.products.delivered_date}}</p>
                    {{/isEqual}}

                    {{#isEqual this.products.status "Canceled"}}
                    <p class="text-danger"> Cancelled on {{toDate this.products.cancelled_date}}</p>
                    {{/isEqual}}

                    {{#isEqual this.products.status "Return pending"}}
                    <p class="text-danger"> Return requested on {{toDate this.products.return_pending_date}}</p>
                    {{/isEqual}}
                    
                    {{#isEqual this.products.status "Returned"}}
                    <p class="text-danger"> Returned on {{toDate this.products.returned_date}}</p>
                    {{/isEqual}}
                </div>
                <div class="d-flex justify-content-between">
                    <button class="btn text-primary pe-4 mt-3 pb-2" style="width: max-content;"
                        onclick="trackOrder('{{this._id}}{{this.prod_details._id}}')">Track Order
                        <i class="fa-solid fa-chevron-down col-1 fs-5 down-{{this._id}}{{this.prod_details._id}}"></i>
                        <i class="fa-solid fa-chevron-up col-1 fs-5 up-{{this._id}}{{this.prod_details._id}}"
                            style="display: none"></i>
                    </button>
                    {{#isEqual this.products.status "Delivered"}}
                    <!--stores the existing review & rating-->
                    <input type="hidden" value="{{this.prod_details.reviewRate.review}}"
                        id="initial-review-{{this._id}}-{{this.prod_details._id}}">
                    <input type="hidden" id="initial-rating-{{this._id}}-{{this.prod_details._id}}"
                        value="{{this.prod_details.reviewRate.rating}}">

                    <button class="btn mt-3 text-primary"
                        onclick="addReview('{{this.prod_details._id}}','{{this._id}}')"><i
                            class="fa-solid fa-star "></i> Rate & Review Product</button>
                    {{/isEqual}}
                    {{#isEqual this.products.status "Return pending"}}
                        <button class="btn mt-3 text-primary"
                        onclick="addReview('{{this.prod_details._id}}','{{this._id}}')"><i
                            class="fa-solid fa-star "></i> Rate & Review Product</button>
                    {{/isEqual}}
                    {{#isEqual this.products.status "Returned"}}
                        <button class="btn mt-3 text-primary"
                        onclick="addReview('{{this.prod_details._id}}','{{this._id}}')"><i
                            class="fa-solid fa-star "></i> Rate & Review Product</button>
                    {{/isEqual}}
                </div>
            </div>

            <div class="view-order p-3 track-{{this._id}}{{this.prod_details._id}}" style="display:none;">
                <hr>
                {{#isEqual this.products.status "Delivered"}}
                <div class="float-end">
                    <a href="/order/print-invoice?orderid={{this._id}}&product={{this.prod_details._id}}"
                        class="btn btn-success me-1"><i class="fa fa-print"></i></a>
                </div>
                {{/isEqual}}
                <div class="delivery-address">
                    <h6 class="fw-bold"> Delivery Address</h6>
                    <p class="fw-bold">{{this.delivery_address.user_name}}</p>
                    <p>{{this.delivery_address.area_street}}, Near {{this.delivery_address.landmark}},
                        {{this.delivery_address.locality}},
                        {{this.delivery_address.town}},
                        {{this.delivery_address.state}},
                        {{this.delivery_address.pincode}}
                    </p>
                    <p>
                        {{this.delivery_address.phone}},
                        {{this.delivery_address.alternate_phone}}
                    </p>
                </div>

                <div class="row d-flex justify-content-center align-items-center h-100">
                    <div class="col">
                    {{#isEqual this.products.status "Payment pending"}}
                    {{else}}
                        <div class="card card-stepper" style="border-radius: 10px;">
                            <div class="card-body p-4">

                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex flex-column">
                                        {{#isEqual this.products.status 'Return pending'}}
                                        <span class="lead fw-normal text-warning">Return pending</span>
                                        {{else}}
                                        <span class="lead fw-normal">Your order has been {{this.products.status}}</span>
                                        {{/isEqual}}
                                    </div>
                                </div>
                                <hr class="my-4">

                                <div
                                    class="d-flex flex-row justify-content-between align-items-center align-content-center">

                                    <div class="col-md-12">
                                        <div class="progress" style="height: 6px; border-radius: 16px;">

                                            <div class="progress-bar" role="progressbar"
                                                style="border-radius: 16px; background-color: #008714;"
                                                aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"
                                                id="bar-{{this._id}}{{this.prod_details._id}}"></div>

                                            <input type="hidden" name="status"
                                                id="{{this._id}}{{this.prod_details._id}}"
                                                value="{{this.products.status}}">

                                        </div>

                                        <div class="d-flex flex-column flex-md-row justify-content-between">
                                            <div class="d-flex flex-md-column align-items-start ">
                                                {{#if this.products.confirmed_date}}
                                                <span>{{toDate this.products.confirmed_date}}</span><span
                                                    class="ms-2 ms-md-0">Confirmed</span>
                                                {{else}}
                                                <span class="text-muted">Confirmed</span>
                                                {{/if}}
                                            </div>

                                            <div class="d-flex flex-md-column align-items-start ">
                                                {{#if this.products.shipped_date}}
                                                <span>{{toDate this.products.shipped_date}}</span><span
                                                    class="ms-2 ms-md-0">Shipped</span>
                                                {{else}}
                                                <span class="text-muted">Shipped</span>
                                                {{/if}}
                                            </div>

                                            {{#if this.products.out_for_delivery_date}}
                                            <div class="d-flex flex-md-column align-items-start ">
                                                <span>{{toDate this.products.out_for_delivery_date}}</span><span
                                                    class="ms-2 ms-md-0">Out
                                                    For
                                                    Delivery</span>
                                            </div>
                                            {{else}}
                                            <span class="text-muted">Out For Delivery</span>
                                            {{/if}}

                                            {{#isEqual this.products.status "Canceled"}}
                                            <div class="d-flex flex-md-column align-items-start">
                                                <div class="d-flex flex-column align-items-end">
                                                    <span>{{toDate this.products.cancelled_date}}</span><span
                                                        class="ms-2 ms-md-0">Canceled</span>
                                                </div>
                                            </div>
                                            {{else}}
                                            {{#if this.products.delivered_date}}
                                            <div class="d-flex flex-md-column align-items-start">
                                                <span>{{toDate this.products.delivered_date}}</span><span
                                                    class="ms-2 ms-md-0">Delivered</span>
                                            </div>
                                            {{else}}
                                            <span class="text-muted">Delivered</span>
                                            {{/if}}
                                            {{/isEqual}}

                                            {{#if this.products.return_pending_date}}
                                            <div class="d-flex flex-md-column align-items-start">
                                                <span>{{toDate this.products.return_pending_date}}</span><span
                                                    class="ms-2 ms-md-0">Return Pending</span>
                                            </div>
                                            {{#isEqual this.products.status 'Returned'}}
                                            {{else}}
                                            <div class="d-flex flex-md-column align-items-start">
                                                <span></span><br><span
                                                    class="ms-2 ms-md-0">Returned</span>
                                            </div>
                                            {{/isEqual}}
                                            {{/if}}

                                            {{#if this.products.returned_date}}
                                            <div class="d-flex flex-md-column align-items-start">
                                                <span>{{toDate this.products.returned_date}}</span><span
                                                    class="ms-2 ms-md-0">Returned</span>
                                            </div>
                                            {{/if}}

                                        </div>
                                        {{#if this.products.out_for_delivery_date}}
                                        {{else}}
                                        {{#isEqual this.products.status "Canceled"}}
                                        {{else}}
                                        <button class="btn btn-outline-danger mt-2 order-cancel">Cancel
                                            order</button><br>
                                        <div class="reason-wraper" style="display: none;">
                                            <textarea name="cancel_reason" class="form-control"
                                                id="reason{{this._id}}{{this.prod_details._id}}" cols="30"
                                                rows="5"></textarea>
                                            <button class="btn btn-outline-danger mt-3 clear-cancel">Cancel</button>
                                            <button class="btn btn-outline-primary ms-2 mt-3"
                                                onclick="cancelOrder(event,'{{this._id}}','{{this.prod_details._id}}')">Submit
                                            </button>
                                        </div>
                                        {{/isEqual}}
                                        {{/if}}

                                        <!--------------return ------->
                                        {{#isEqual this.products.status 'Delivered'}}
                                        <button class="btn btn-outline-danger mt-2 order-return">Return</button><br>
                                        <div class="return-reason-wraper" style="display: none;">
                                            <textarea name="return_reason" class="form-control"
                                                id="return-reason{{this._id}}{{this.prod_details._id}}" cols="30"
                                                rows="5"></textarea>
                                            <button class="btn btn-outline-danger mt-3 clear-return">Cancel</button>
                                            <button class="btn btn-outline-primary ms-2 mt-3"
                                                onclick="returnOrder(event,'{{this._id}}','{{this.prod_details._id}}')">Submit
                                            </button>
                                        </div>
                                        {{/isEqual}}
                                        {{#isEqual this.products.status "Canceled"}}
                                        <h6 class="mt-3 fw-bold">Calcellation reason</h6>
                                        {{this.products.cancel_reason}}
                                        {{/isEqual}}
                                    </div>
                                </div>
                            </div>
                        </div>
                    {{/isEqual}}
                    </div>
                </div>
            </div>
        </div>
        {{/each}}
    </div>
    <div class="review-rate  p-4 card shadow">
        <div class="d-flex justify-content-between">
            <h5>Rate this product</h5>
            <i class="fa-solid fa-xmark text-danger fs-2" onclick="closeReview()"></i>
        </div>
        <div class="rating-err text-danger"></div>
        <div id="rating-wraper" class="py-3">
            <i class="fa-regular fa-star star text-warning" id="1"></i>
            <i class="fa-regular fa-star star text-warning" id="2"></i>
            <i class="fa-regular fa-star star text-warning" id="3"></i>
            <i class="fa-regular fa-star star text-warning" id="4"></i>
            <i class="fa-regular fa-star star text-warning" id="5"></i>
        </div>
        <form action="">
            <input type="hidden" id="rating-field"> <!--stores the selected rating temperorly-->
            <input type="hidden" id="rating-product">
            <h5>Review this product</h5>
            <div class="review-err text-danger"></div>
            <div id="review-container">
                <textarea name="review" id="review-field" class="form-control" id="" cols="30" rows="7"
                    style="width: 100%;"></textarea>
            </div>
            <div class="d-flex">
                <button type="reset" class="btn btn-outline-danger mt-3" onclick="clearRating()">Clear</button><button
                    type="button" class="btn btn-outline-primary mt-3 ms-3" id="submit-review">Submit</button>
            </div>
        </form>
    </div>
</div>

<script>
    $(function () {
        const status = document.getElementsByName('status')
        const progressBar = document.getElementById('progress-bar')
        for (let st of status) {
            if (st.value == 'Confirmed') {
                document.getElementById('bar-' + st.id).style.width = '5%'
            }
            else if (st.value == 'Shipped') {
                document.getElementById('bar-' + st.id).style.width = '35%'
            }
            else if (st.value == 'Out for delivery') {
                document.getElementById('bar-' + st.id).style.width = '65%'
            }
            else if (st.value == 'Delivered') {
                document.getElementById('bar-' + st.id).style.width = '100%'

            }
            else if (st.value == 'Canceled') {
                document.getElementById('bar-' + st.id).style.width = '100%'
                document.getElementById('bar-' + st.id).style.backgroundColor = "red";
            }
            else if (st.value == 'Return pending') {
                document.getElementById('bar-' + st.id).style.width = '80%'
                document.getElementById('bar-' + st.id).style.backgroundColor = "yellow";
            }
            else if (st.value == 'Returned') {
                document.getElementById('bar-' + st.id).style.width = '100%'
                document.getElementById('bar-' + st.id).style.backgroundColor = "red";
            }
        }

        trackOrder = (cls) => {

            $('.track-' + cls).slideToggle()
            $('.up-' + cls).toggle()
            $('.down-' + cls).toggle()
        }
        /*cancel order*/

        $('.order-cancel').on('click', () => {
            $('.order-cancel').toggle();
            $('.reason-wraper').slideToggle()
        });

        $('.clear-cancel').on('click', () => {
            $('.order-cancel').toggle();
            $('.reason-wraper').slideToggle()
        });

        cancelOrder = (e, order, product) => {
            e.preventDefault()
            Swal.fire({
                title: 'Are you sure',
                text: "You want to cancel the order?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    const cancel_reason = document.getElementById('reason' + order + product).value
                    let body = {
                        order,
                        product,
                        cancel_reason
                    }
                    fetch('/order/cancel-order', {
                        method: 'POST',
                        body: JSON.stringify(body),
                        headers: { "Content-Type": "application/json" }
                    }).then((response) => {
                        return response.json()
                    }).then((data) => {
                        if (data.status == 'success') {
                            Swal.fire(
                                "Success!",
                                "Order Cancelled Successfully",
                                "success"
                            ).then(() => {
                                location.assign("/account/my-orders");
                            });
                        }
                    })
                }
            })
        }

        //order return
        $('.order-return').on('click', () => {
            $('.order-return').toggle();
            $('.return-reason-wraper').slideToggle()
        })

        $('.clear-return').on('click', () => {
            $('.order-return').toggle();
            $('.return-reason-wraper').slideToggle()
        });
        returnOrder = (e, order, product) => {
            e.preventDefault()
            Swal.fire({
                title: 'Are you sure',
                text: "You want to return this order?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    const return_reason = document.getElementById('return-reason' + order + product).value
                    let body = {
                        order,
                        product,
                        return_reason
                    }
                    fetch('/order/return-order', {
                        method: 'POST',
                        body: JSON.stringify(body),
                        headers: { "Content-Type": "application/json" }
                    }).then((response) => {
                        return response.json()
                    }).then((data) => {
                        if (data.status == 'success') {
                            Swal.fire(
                                "Success!",
                                "Order return request send Successfully",
                                "success"
                            ).then(() => {
                                location.assign("/account/my-orders");
                            });
                        }
                    })
                }
            })
        }

        //adding rating when clicking star
        $('.star').on('click', (e) => {
            const rating = e.target.id;
            $('.star').removeClass('fa-solid')
            $('.star').addClass('fa-regular');
            for (let i = 0; i <= rating; i++) {
                $('#' + i).removeClass('fa-regular');
                $('#' + i).addClass('fa-solid');
            }
            $('#rating-field').val(e.target.id)
        })

        //reset the stars when clicking clear
        clearRating = () => {
            $('.star').removeClass('fa-solid')
            $('.star').addClass('fa-regular');
        }

        //submitting the review
        $('#submit-review').on('click', () => {
            $('.rating-err').text('');
            $('.review-err').text('');
            const rating = $('#rating-field').val()
            const review = $('#review-field').val()
            const product = $('#rating-product').val()
            if (rating == '') {
                $('.rating-err').text('Please add a raing');
            } else if (review == '') {
                $('.review-err').text('Please add a review');
            } else {
                fetch('/account/add-review-rating', {
                    method: 'POST',
                    body: JSON.stringify({
                        rating,
                        review,
                        product
                    }),
                    headers: { "Content-Type": "application/json" }
                }).then((res) => res.json()).then((data) => {

                    if (data.status == 'success') {
                        Swal.fire(
                            "Success!",
                            "New review and rating added.",
                            "success"
                        ).then(() =>
                            closeReview()
                        );
                    }
                })
            }
        })

        //open review rating
        addReview = (product, order) => {
            //setting the existing review and rating
            const review = $('#initial-review-' + order + '-' + product).val()
            const rating = $('#initial-rating-' + order + '-' + product).val()
            $('.star').removeClass('fa-solid')
            $('.star').addClass('fa-regular');
            $('#review-field').text('')
            if (review) {
                $('#review-field').text(review)
            }
            if (rating) {
                for (let i = 0; i <= rating; i++) {
                    $('#' + i).removeClass('fa-regular');
                    $('#' + i).addClass('fa-solid');
                }
            }
            if (!$('.review-rate').is(":visible")) {
                $('.review-rate').toggle()
                $('#rating-product').val(product)
            }
        }
        closeReview = () => {
            $('.review-rate').toggle()
            $('#rating-product').val('')
        }

    })
</script>